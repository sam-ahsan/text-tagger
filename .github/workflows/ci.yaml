name: Test Commit

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install host dev tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.5.7 mypy

      - name: Lint (ruff)
        run: ruff check .

      - name: Type check (mypy)
        continue-on-error: true
        run: mypy app

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Write CI env file
        run: |
          cat > .env.ci << 'EOF'
          # --- API / Auth ---
          JWT_SECRET=ci-secret
          JWT_ALG=HS256
          ACCESS_TOKEN_EXPIRE_MINUTES=60

          # --- Celery / Redis ---
          REDIS_URL=redis://redis:6379/0
          CELERY_TAGGING_QUEUE=tagging
          CELERY_SOFT_TIME_LIMIT=55
          CELERY_TIME_LIMIT=60
          CELERY_RESULT_EXPIRES=3600
          CACHE_TTL_SECONDS=600

          # --- Rate limiting (high during CI) ---
          RATE_LIMIT_REQS=1000
          RATE_LIMIT_WINDOW=60

          # --- Python path inside container ---
          PYTHONPATH=/app

          # --- HF cache in a writable location for containers ---
          HF_HOME=/tmp/hf
          HUGGINGFACE_HUB_CACHE=/tmp/hf
          HF_HUB_DISABLE_TELEMETRY=1
          TRANSFORMERS_VERBOSITY=error
          EOF

      - name: Duplicate env for base compose
        run: cp .env.ci .env

      - name: Run make ci (compose up + tests inside api + down)
        run: |
          make ci

      - name: Dump logs on failure
        if: failure()
        run: |
          docker compose -f docker-compose.yaml -f docker-compose.ci.yaml logs api worker redis --tail=500 || true
